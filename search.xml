<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaScript 基础第一天</title>
      <link href="/2024/07/15/JavaScript2.html"/>
      <url>/2024/07/15/JavaScript2.html</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript变量"><a href="#JavaScript变量" class="headerlink" title="JavaScript变量"></a>JavaScript变量</h1><h2 id="变量是什么？"><a href="#变量是什么？" class="headerlink" title="变量是什么？"></a>变量是什么？</h2><p>变量是计算机存储数据的“ 容器”<br>用户输入的数据我们通过变量存储起来<br>白话： 变量就是一个装东西的盒子。<br>通俗： 变量是计算机中用来存储数据的“ 容器” ， 它可以让计算机变得有记忆。<br>注意： 变量不是数据本身， 它们仅仅是一个用于存储数值的容器。 可以理解为是一个个用来装东西的纸箱子。</p><h2 id="变量的基本使用"><a href="#变量的基本使用" class="headerlink" title="变量的基本使用"></a>变量的基本使用</h2><h3 id="变量的声明"><a href="#变量的声明" class="headerlink" title="变量的声明"></a>变量的声明</h3><p>要想使用变量， 首先需要创建变量（ 也称为声明变量或者定义变量）<br>使用let关键字<br>语法：let 变量名</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 声明一个年龄变量</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> age    </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h3 id="变量的赋值"><a href="#变量的赋值" class="headerlink" title="变量的赋值"></a>变量的赋值</h3><p>定义了一个变量后， 你就能够初始化它（ 赋值） 。 在变量名之后跟上一个“ &#x3D;” ， 然后是数值。<br>简单点， 也可以声明变量的时候直接完成赋值操作,这种操作也称为 变量初始化。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 赋值   =  赋值</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//let age</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// age = 18</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 声明的同时直接赋值  变量的初始化</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// let age = 18</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 小案例</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> num = <span class="number">20</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> uname = <span class="string">&#x27;pink老师&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(uname)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h3 id="更新变量"><a href="#更新变量" class="headerlink" title="更新变量"></a>更新变量</h3><p>变量赋值后， 还可以通过简单地给它一个不同的值来更新它。<br>注意： let 不允许多次声明一个变量。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 声明的同时直接赋值  变量的初始化</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> age = <span class="number">18</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    age = <span class="number">19</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> age = <span class="number">19</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(age)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h3 id="声明多个变量"><a href="#声明多个变量" class="headerlink" title="声明多个变量"></a>声明多个变量</h3><p>变量赋值后， 还可以通过简单地给它一个不同的值来更新它。<br>语法： 多个变量中间用逗号隔开。<br>说明： 看上去代码长度更短， 但并不推荐这样。 为了更好的可读性， 请一行只声明一个变量。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 声明多个变量    </span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// let age = 18, uname = &#x27;迪丽热巴&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// console.log(age, uname)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 提倡声明的方式</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> age = <span class="number">19</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> uname = <span class="string">&#x27;迪丽热巴&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(age, uname)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="变量的本质"><a href="#变量的本质" class="headerlink" title="变量的本质"></a>变量的本质</h2><p>内存： 计算机中存储数据的地方， 相当于一个空间<br>变量本质： 是程序在内存中申请的一块用来存放数据的小空间</p><h2 id="变量命名规则与规范"><a href="#变量命名规则与规范" class="headerlink" title="变量命名规则与规范"></a>变量命名规则与规范</h2><p>规则： 必须遵守， 不遵守报错 (法律层面)<br>规范： 建议， 不遵守不会报错， 但不符合业内通识 （ 道德层面）</p><h3 id="规则："><a href="#规则：" class="headerlink" title="规则："></a>规则：</h3><p>不能用关键字<br>关键字： 有特殊含义的字符， JavaScript 内置的一些英语词汇。 例如： let、 var、 if、 for等<br>只能用下划线、 字母、 数字、 $组成， 且数字不能开头<br>字母严格区分大小写， 如 Age 和 age 是不同的变量</p><h3 id="规范："><a href="#规范：" class="headerlink" title="规范："></a>规范：</h3><p>起名要有意义<br>遵守小驼峰命名法–第一个单词首字母小写， 后面每个单词首字母大写。 例： userName</p><h2 id="变量拓展-let和var的区别"><a href="#变量拓展-let和var的区别" class="headerlink" title="变量拓展-let和var的区别"></a>变量拓展-let和var的区别</h2><p>先说结论 :var就是个bug，别迷恋它了，以后声明变量我们统一使用 let</p><h3 id="let-和-var-区别："><a href="#let-和-var-区别：" class="headerlink" title="let 和 var 区别："></a>let 和 var 区别：</h3><p>在较旧的JavaScript， 使用关键字 var 来声明变量 ， 而不是 let。<br>var 现在开发中一般不再使用它， 只是我们可能再老版程序中看到它。<br>let 为了解决 var 的一些问题。</p><h3 id="var-声明"><a href="#var-声明" class="headerlink" title="var 声明:"></a>var 声明:</h3><p>1.可以先使用 在声明 (不合理)<br>2.var 声明过的变量可以重复声明(不合理)<br>3.比如变量提升、 全局变量、 没有块级作用域等等</p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript 基础第一天</title>
      <link href="/2024/05/15/JavaScript1.html"/>
      <url>/2024/05/15/JavaScript1.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://developer.mozilla.org/zh-CN/docs/Glossary/JavaScript">JavaScript</a>是一种脚本语言，可以用来创建动态更新的内容，控制多媒体，制作图像动画，还有很多。（好吧，虽然它不是万能的，但可以通过简短的代码来实现神奇的功能。）</p><h1 id="JavaScript-介绍"><a href="#JavaScript-介绍" class="headerlink" title="JavaScript 介绍"></a>JavaScript 介绍</h1><h2 id="JavaScript-是什么"><a href="#JavaScript-是什么" class="headerlink" title="JavaScript 是什么"></a>JavaScript 是什么</h2><h3 id="JavaScript-（是什么？）"><a href="#JavaScript-（是什么？）" class="headerlink" title="JavaScript （是什么？）"></a>JavaScript （是什么？）</h3><p>是一种运行在客户端（浏览器）的编程语言，实现人机交互效果。</p><h3 id="作用（做什么？）"><a href="#作用（做什么？）" class="headerlink" title="作用（做什么？）"></a>作用（做什么？）</h3><p>– 网页特效 (监听用户的一些行为让网页作出对应的反馈)<br>– 表单验证 (针对表单数据的合法性进行判断)<br>– 数据交互 (获取后台的数据, 渲染到前端)<br>– 服务端编程 (node.js)</p><h3 id="JavaScript的组成（-有什么？-）"><a href="#JavaScript的组成（-有什么？-）" class="headerlink" title="JavaScript的组成（ 有什么？ ）"></a>JavaScript的组成（ 有什么？ ）</h3><h4 id="ECMAScript"><a href="#ECMAScript" class="headerlink" title="ECMAScript:"></a>ECMAScript:</h4><p>规定了js基础语法核心知识。<br>比如： 变量、 分支语句、 循环语句、 对象等等</p><h4 id="Web-APIs"><a href="#Web-APIs" class="headerlink" title="Web APIs :"></a>Web APIs :</h4><p>DOM 操作文档， 比如对页面元素进行移动、 大小、 添加删除等操作<br>BOM 操作浏览器， 比如页面弹窗， 检测窗口宽度、 存储数据到浏览器等等</p><h2 id="JavaScript-书写位置"><a href="#JavaScript-书写位置" class="headerlink" title="JavaScript 书写位置"></a>JavaScript 书写位置</h2><h3 id="内部-JavaScript"><a href="#内部-JavaScript" class="headerlink" title="内部 JavaScript"></a>内部 JavaScript</h3><p>直接写在html文件里，用script标签包住<br>规范：script标签写在上面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;!-- 内部js --&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 页面弹出警示框</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">alert</span>(<span class="string">&#x27;你好，js~&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h3 id="外部-JavaScript"><a href="#外部-JavaScript" class="headerlink" title="外部 JavaScript"></a>外部 JavaScript</h3><p>代码写在以.js结尾的文件里<br>语法：通过script标签，引入到html页面中。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./js/my.js&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 中间不要写内容</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h3 id="内联-JavaScript"><a href="#内联-JavaScript" class="headerlink" title="内联 JavaScript"></a>内联 JavaScript</h3><p>代码写在标签内部(vue框架)</p><h2 id="JavaScript-注释"><a href="#JavaScript-注释" class="headerlink" title="JavaScript 注释"></a>JavaScript 注释</h2><h3 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a>单行注释</h3><p>符号： &#x2F;&#x2F;<br>作用： &#x2F;&#x2F;右边这一行的代码会被忽略<br>快捷键： ctrl + &#x2F;</p><h3 id="块注释"><a href="#块注释" class="headerlink" title="块注释"></a>块注释</h3><p>符号： &#x2F;* <em>&#x2F;<br>作用： 在&#x2F;</em> 和 *&#x2F; 之间的所有内容都会被忽略<br>快捷键： shift + alt + A</p><h2 id="JavaScript-结束符"><a href="#JavaScript-结束符" class="headerlink" title="JavaScript 结束符"></a>JavaScript 结束符</h2><p>结束符<br>作用： 使用英文的 ; 代表语句结束<br>实际情况： 实际开发中， 可写可不写, 浏览器(JavaScript 引擎) 可以自动推断语句的结束位置<br>现状： 在实际开发中， 越来越多的人主张， 书写 JavaScript 代码时省略结束符<br>约定： 为了风格统一， 结束符要么每句都写， 要么每句都不写（ 按照团队要求.）</p><h2 id="JavaScript-输入输出语法"><a href="#JavaScript-输入输出语法" class="headerlink" title="JavaScript 输入输出语法"></a>JavaScript 输入输出语法</h2><h3 id="输出语法"><a href="#输出语法" class="headerlink" title="输出语法"></a>输出语法</h3><h4 id="输出语法1"><a href="#输出语法1" class="headerlink" title="输出语法1"></a>输出语法1</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 文档输出内容</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;我是div标签&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;h1&gt;我是标题&lt;/h1&gt;&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>作用： 向body内输出内容<br>注意： 如果输出的内容写的是标签， 也会被解析成网页元素</p><h4 id="输出语法2"><a href="#输出语法2" class="headerlink" title="输出语法2"></a>输出语法2</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//页面弹出内容</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">alert</span>(<span class="string">&#x27;要弹出的内容&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>作用： 页面弹出警告对话框</p><h4 id="输出语法3"><a href="#输出语法3" class="headerlink" title="输出语法3"></a>输出语法3</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 控制台打印输出 给 程序员</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;看看对不对&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;日志&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>作用： 控制台输出语法， 程序员调试使用</p><h3 id="输入语法"><a href="#输入语法" class="headerlink" title="输入语法"></a>输入语法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 输入语句</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">prompt</span>(<span class="string">&#x27;请输入您的年龄：&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>作用： 显示一个对话框， 对话框中包含一条文字信息， 用来提示用户输入文字</p><h2 id="字面量"><a href="#字面量" class="headerlink" title="字面量"></a>字面量</h2><p>在计算机科学中， 字面量（ literal） 是在计算机中描述 事&#x2F;物<br>比如：<br>我们工资是： 1000 此时 1000 就是 数字字面量<br>‘JavaScript’ 字符串字面量<br>还有接下来我们学的 [] 数组字面量 {} 对象字面量 等等</p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
